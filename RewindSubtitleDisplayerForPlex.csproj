<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Note: If multiple framework OS versions targeted like net9.0-windows vs net9.0-macos, apparently the first framework listed is what gets used when debugging -->
		<!-- <TargetFrameworks>net9.0;net6.0;net7.0;net8.0;</TargetFrameworks> -->
		<TargetFramework>net9.0</TargetFramework>
		
		<!-- Default to console app, but if for Windows make it a "Windows Application" so it doesn't attach to console by default, so can run purely background. -->
		<OutputType>Exe</OutputType>
		<OutputType Condition="$([System.String]::Copy('$(TargetFramework)').EndsWith('-windows')) Or $([System.String]::Copy('$(RuntimeIdentifier)').StartsWith('win'))">
			WinExe
		</OutputType>

		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<LangVersion>13.0</LangVersion>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<AssemblyVersion>1.0.0</AssemblyVersion>
		<FileVersion>1.0.0</FileVersion>
		<PublishAot>False</PublishAot>
		<PublishTrimmed>False</PublishTrimmed>
		<ApplicationIcon>Resources\Icon.ico</ApplicationIcon>
	</PropertyGroup>
	
	<PropertyGroup>
		<TargetName>$(AssemblyName)_$(FileVersion)</TargetName>
		<AssemblyName>$(TargetName)</AssemblyName>
	</PropertyGroup>
	

	<!-- Enable Native AOT and Trimming only if publishing self contained mode AND it's for windows since native AOT doesn't work when cross compiling -->
	<PropertyGroup Condition="'$(SelfContained)' == 'true' And $([System.String]::Copy('$(RuntimeIdentifier)').StartsWith('win'))">
		<PublishAot>true</PublishAot>
		<PublishTrimmed>true</PublishTrimmed>
	</PropertyGroup>

</Project>
